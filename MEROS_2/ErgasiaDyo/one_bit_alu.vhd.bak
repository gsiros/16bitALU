LIBRARY ieee;
USE ieee.std_logic_1164.all;

PACKAGE ONE_BIT_ALU_PACK IS

	COMPONENT ONE_BIT_ALU
	
		PORT( A1,B1, carryIN1: IN std_logic;
					Ainvert1,Binvert1: IN std_logic;
					F1, carryOut: OUT STD_logic;
					S1: IN STD_logic_vector(1 DOWNTO 0);
					overflowOfTruth1: OUT std_logic
				);
	
	END COMPONENT;

END PACKAGE ONE_BIT_ALU_PACK;

LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY Ergasia2_one IS
	
	PORT(A,B, carryIN: IN STD_logic; Ainvert,Binvert: IN std_logic; F, carryOut : OUT STD_logic; S: IN STD_logic_vector(1 DOWNTO 0); overflowOfTruth : OUT std_logic);

END Ergasia2_one;

ARCHITECTURE Behavioral OF Ergasia2_one IS

signal Afinal,Bfinal, temp: std_logic;

BEGIN

	with Ainvert select
		Afinal <= A when '0',
					NOT A when '1';
					
	with Binvert select
		Bfinal <= B when '0',
					NOT B when '1';

	PROCESS(S) IS
	BEGIN
			case S is
				when "00"=>F<=Afinal AND Bfinal;
				when "01"=>F<=Afinal OR Bfinal;
				when "10"=>	F <=(Afinal AND (NOT Bfinal) AND (NOT carryIN)) OR ((NOT Afinal) AND Bfinal AND (NOT carryIN)) OR ((NOT Afinal) AND (NOT Bfinal) AND carryIN) OR (Afinal AND Bfinal AND carryIN);
				when "11"=>F<=Afinal XOR Bfinal;
			end case;
	END PROCESS;
	carryOut <= (Afinal AND carryIN) OR (Bfinal AND carryIN) OR (Afinal AND Bfinal);
	temp <=(Afinal AND carryIN) OR (Bfinal AND carryIN) OR (Afinal AND Bfinal);
	overflowOfTruth <= carryIN XOR temp;
END Behavioral;